<?phpfunction getTablePrefix()	{	global $wpdb;	if(defined('MULTISITE'))		{		$remove = $wpdb->blogid . '_';		$table = str_replace($remove,'',$wpdb->prefix);		} else {		$table = $wpdb->prefix;		}	return $table;	}function getPluginURL()	{	$pluginurl = ( WP_PLUGIN_URL . '/super-capcha' );	return $pluginurl;	}function updateConfigs($index,$value)	{	global $wpdb;	$csql = ("SELECT * FROM `". getTablePrefix() . SCAPTCHA_TABLE ."` WHERE `conf_key`='". $index ."'");	$check = mysql_fetch_array(mysql_query($csql));	if($check['conf_key'] == $index)		{		mysql_query("UPDATE `". getTablePrefix() . SCAPTCHA_TABLE ."` SET `conf_val`='". $value ."' WHERE `conf_key`='". $index ."'");		} else {		mysql_query("INSERT INTO `" . getTablePrefix() . SCAPTCHA_TABLE . "` (`conf_key`, `conf_val`) VALUES ('". $index ."', '". $value ."')");		}	}function sCaptcha_dbtable()	{// this is for external pages that have trouble getting the table stuff.	global $wpdb;	$string = getTablePrefix() . SCAPTCHA_TABLE;	return $string;	}function get_users_table($tabletype)	{	global $wpdb;	if($tabletype == 'meta')		{		return $wpdb->usermeta;		}	elseif($tabletype == 'user')		{		return $wpdb->users;		}	}function mlw_db_widget()	{ // This adds the WP-Admin Feeds system to your DashBoard.	wp_add_dashboard_widget('mlw_dashboard_widget', 'MLW & Associates, LLP News', 'mlw_dashboard_widget_funct');		}function mlw_dashboard_widget_funct()	{	include_once(ABSPATH . WPINC . '/feed.php');	$rss = fetch_feed('http://www.mlwassociates.com/feed/');	$maxitems = $rss->get_item_quantity(3); 	$rss_items = $rss->get_items(0, $maxitems); 	?>	<ul>		<?php if ($maxitems == 0) echo '<li>Ooops!  Something is wrong.  I can&apos;t find any news!</li>';		else		// Loop through each feed item and display each item as a hyperlink.		foreach ( $rss_items as $item ) : ?>		<li>			<a href='<?php echo $item->get_permalink(); ?>' class="rsswidget"><?php echo $item->get_title(); ?></a>			<span class="rss-date"><?php echo $item->get_date('F j, Y'); ?></span>			<div class="rssSummary"><?php echo $item->get_description(); ?>... <a href="<?php echo $item->get_permalink(); ?>">Read More</a>.</div>		</li>		<?php endforeach; ?>	</ul>	<?php	}function updateHack_Counts($val)	{	global $wpdb, $current_user;	if(getConfigExists($val) == FALSE)		{		mysql_query("INSERT INTO `". getTablePrefix() . SCAPTCHA_TABLE ."` (conf_key, conf_val) VALUES ('" . $val . "', '1') ");		} else {		$sval = getConfigVal($val);		$ud_sval = $sval + 1;		updateConfigs($val,$ud_sval);		}	if( is_user_logged_in() )		{		get_currentuserinfo();		$loggedinuser = $current_user->user_login;		} else {		$loggedinuser = 'guest';		}	mysql_query("INSERT INTO `". getTablePrefix() . SCAPTCHA_TABLE ."_logs` (`log_user`, `log_ip`, `log_time`, `log_host`, `log_browser`, `log_form`) VALUES ('" . $loggedinuser . "', '". $_SERVER['REMOTE_ADDR'] ."', '". time() ."', '". gethostbyaddr($_SERVER['REMOTE_ADDR']) ."', '". $_SERVER['HTTP_USER_AGENT'] ."', '". $_SERVER['HTTP_REFERER'] ."|". $_SERVER['HTTP_HOST'] ."|". $_POST['signup_username'] ."|". $_POST['signup_email'] ."|". $_POST['signup_blog_url'] ."|". $_POST['signup_blog_title'] ."') ");	}function SpamFieldUpdate()	{	global $wpdb;	// We have to check for a very important field or two.	$fields = mysql_list_fields(DB_NAME, $wpdb->users);       	$columns = mysql_num_fields($fields);       	for ($i = 0; $i < $columns; $i++)		{		$field_array[] = mysql_field_name($fields, $i);		}       	if (!in_array('spam', $field_array))		{		mysql_query("ALTER TABLE `". $wpdb->users ."` ADD `spam` INT(11) NOT NULL DEFAULT '0';");		}	if (!in_array('deleted', $field_array))		{		mysql_query("ALTER TABLE `". $wpdb->users ."` ADD `deleted` INT(11) NOT NULL DEFAULT '0';");		}	}function runUpdates()	{	global $wpdb;	$sql = mysql_query("SELECT * FROM `". getTablePrefix() . SCAPTCHA_TABLE ."`");	while($ary = mysql_fetch_array($sql))		{		$key = $ary['conf_key'];		if(isset($_POST[$key]))			{			if($_POST[$key] == 'on')				{				$_POST[$key] = 'true';				}			updateConfigs($key,$_POST[$key]);			// $feedback .=('Trying... ' . $_POST[$key] . '<br />');			} else {			updateConfigs($key,'');			// $feedback .= ($key . ' failed to update!<br />');			}		}	SpamFieldUpdate();	return $feedback;	}function conf_array()	{	$config_array = array(		'bots::signup'				=> '0',		'bots::login'				=> '0',		'display::login'			=> 'false',		'display::sgup'				=> 'false',		'display::blog' 			=> 'false',		'display::copyright'		=> 'true',		'page::userbanned::status'	=> 'false',		'page::userbanned'			=> '/banned/',        '3dfont::path'				=> THIS_DIR . '/includes/',        '3dfont::name'              => '3DCaptcha.ttf',		'captcha::type'				=> '3-D',		'sef::URL'				    => 'false',        '3dbackground::name'        => '',        '3dbackground::distort'     => 'false',		'config::version'			=> SCAPTCHA_VERSN		);	return $config_array;	}function restoreDefaults()	{	global $wpdb;	$cfgs = conf_array();	echo(upgradeDB());	foreach ($cfgs as $key => $val)		{		mysql_query("UPDATE `". getTablePrefix() . SCAPTCHA_TABLE ."` SET `conf_val`='" . $val . "' WHERE `conf_key`='" . $key . "'");		}	}function getConfigVal($index)	{	global $wpdb;	$mainq = ("SHOW TABLES LIKE '" . getTablePrefix() . SCAPTCHA_TABLE . "'");	$main_table_name = (getTablePrefix() . SCAPTCHA_TABLE);	$ary = conf_array();	if($wpdb->get_var($mainq) != $main_table_name)		{		return NULL;		} else {		$sql = ("SELECT * FROM `". getTablePrefix() . SCAPTCHA_TABLE ."` WHERE `conf_key`='". $index ."'");		$res = mysql_fetch_array(mysql_query($sql));		if(empty($res['conf_val']))			{			return NULL;			} else {			return $res['conf_val'];			}		}	}function getConfigExists($index)	{	global $wpdb;	$sql = ("SELECT * FROM `". getTablePrefix() . SCAPTCHA_TABLE ."` WHERE `conf_key`='". $index ."'");	$ary = mysql_fetch_array(mysql_query($sql));	if(isset($ary['conf_id']))		{		return TRUE;		} else {		return FALSE;		}	}function checkIt($key)	{	global $wpdb;	$sql = ("SELECT * FROM `". getTablePrefix() . SCAPTCHA_TABLE ."` WHERE `conf_key`='". $key ."'");	$ary = mysql_fetch_array(mysql_query($sql));	if($ary['conf_val'] == 1 || $ary['conf_val'] == 'true')		{		$ret = (' CHECKED');		} else {		$ret = NULL;		}	return $ret;	}function selectIt($key,$val)	{	global $wpdb;	$sql = ("SELECT * FROM `". getTablePrefix() . SCAPTCHA_TABLE ."` WHERE `conf_key`='". $key ."'");	$ary = mysql_fetch_array(mysql_query($sql));	if($ary['conf_val'] == $val)		{		$ret = (' SELECTED');		} else {		$ret = NULL;		}	return $ret;	}function getPage($file)	{ // $file is assuming .php, do not include the .php	$realFile = (THIS_DIR . '/pages/' . $file . '.php');	if (file_exists($realFile))		{		require_once($realFile);		return TRUE;		} else {		return FALSE;		}	}function GetfontList($dir)    {    if (is_dir($dir))         {        if ($dh = opendir($dir))             {            $conf = getConfigExists('3dfont::name');            if($conf == false)                {                $ret .= '<option value="3DCaptcha.ttf" selected="true">3DCaptcha.ttf</option>';                }            while (($file = readdir($dh)) !== false)                {                $thisfiletype = explode('.', $file);                if($thisfiletype[1] == 'ttf')                    {                    $ret .= '<option value="'. $file .'"'. selectIt('3dfont::name',$file) .'>'. $file .'</option>';                    }                }            closedir($dh);            return $ret;            }        }            }function GetBGList($dir)    {    if (is_dir($dir))         {        if ($dh = opendir($dir))             {            $conf = getConfigExists('3dbackground::name');            if($conf == false)                {                $ret .= '<option value="" selected="true">None</option>';                } else {                $ret .= '<option value="">None</option>';                }                        while (($file = readdir($dh)) !== false)                {                $thisfiletype = explode('.', $file);                if($thisfiletype[1] == 'jpg')                    {                    $ret .= '<option value="'. $file .'"'. selectIt('3dbackground::name',$file) .'>'. $file .'</option>';                    }                }            closedir($dh);            return $ret;            }        }            }function GetBGThumbs($dir)    {    if (is_dir($dir))         {        if ($dh = opendir($dir))             {                        $ret .= '<div style="width: 500px; float: left;"';            while (($file = readdir($dh)) !== false)                {                $thisfiletype = explode('.', $file);                if($thisfiletype[1] == 'jpg')                    {                    $ret .= '<div style="display: inline-block; width: 150px;"><img src="/wp-content/plugins/super-capcha/includes/'. $file .'" width="100" style="margin-left: 25px" alt="'. $file .'" /><br />'. $file .'</div>';                    }                }            $ret .= '</div>';            closedir($dh);            return $ret;            }        }            }function GDorTFF($reqtype)	{	if($reqtype == 'gd')		{		if(getConfigVal('font::type') == 'gd')			{			return true;			} else {			return false;			}		} else {		if(getConfigVal('font::type') == 'ttf')			{			return true;			} else {			return false;			}		}	}function clearLogTable()	{	global $wpdb;	mysql_query("DELETE FROM `" . getTablePrefix() . SCAPTCHA_TABLE . "_logs`");	$result = ('<h3>Logs Cleared</h3>');	return $result;	}function upgradeDB()	{	global $wpdb;	$cfgs = conf_array();	foreach ($cfgs as $key => $val)		{		$result .= upgradeRoutine($key,$val);		}	$result .= update_option("scaptcha_db_version", SCAPTCHA_VERSN);	$result .= ('<h3>Tables Upgraded</h3>');	mysql_query("UPDATE `" . getTablePrefix() . SCAPTCHA_TABLE . "` SET `conf_val`='" . SCAPTCHA_VERSN . "' WHERE `conf_key`='config::version'");	return($result);	}function installDB()	{	global $wpdb;	$cfgs = conf_array();	foreach ($cfgs as $key => $val)		{		installRoutine($key,$val);		}	}function upgradeRoutine($key,$val)	{	global $wpdb;	$query = ("SELECT * FROM `" . getTablePrefix() . SCAPTCHA_TABLE . "` WHERE `conf_key`='". $key ."'");	$row = mysql_fetch_array(mysql_query($query));	if(empty($row['conf_key']))		{		mysql_query("INSERT INTO `" . getTablePrefix() . SCAPTCHA_TABLE . "` (`conf_key`, `conf_val`) VALUES ('". $key ."', '". $val ."')");		$html=("Record " . $key . " updated!<br />");		}	return $html;	}function installRoutine($key,$val)	{	global $wpdb;	$query = ("SELECT * FROM `" . getTablePrefix() . SCAPTCHA_TABLE . "` WHERE `conf_key`='". $key ."'");	$row = mysql_fetch_array(mysql_query($query));	if(empty($row['conf_key']))		{		$sql = mysql_query("INSERT INTO `" . getTablePrefix() . SCAPTCHA_TABLE . "` (`conf_key`, `conf_val`) VALUES ('". $key ."', '". $val ."')");		}	return $sql;	}?>